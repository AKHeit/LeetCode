All code is manually subversioned (v0_0, v0_1, ... v1_0, v1_1 etc.)
final.py is what is finally submitted to LeetCode

Contents:
- Tracking
- Notes on Python/Linux etc.

http://cslibrary.stanford.edu/

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#             Tracking 
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Done:
linked lists

To Do:
(potentially some more linked list problems)
stacks/queues, hashes, heaps and trees




#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#             Notes 
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Contents:
- Python
- Alg General
- Alg Linked Lists

#
#             Python
# 

Python: Dictionary Implementation
- Python currenly uses a Hash Table
- A red-black tree (alternative) can always perform a lookup in O(log N). 
- A hashtable can perform a lookup in O(1) time although that can degrade to O(N) depending on the input.

Python general notes:
- instances of user-defined objects are always hashable


#
#             Alg General
# 
Red-Black tree has O(logN) lookup
Hash Table best O(1), worst O(N)



